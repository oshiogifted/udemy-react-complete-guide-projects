{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oshio\\\\Documents\\\\Udemy React- Complete Guide Course\\\\01- Starter Project\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // Alternative - using one state as opposed to multiple states\n\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: ''\r\n  }); */\n\n  const titleChangedHander = event => {\n    setEnteredTitle(event.target.value);\n    console.log(event.target.value);\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredTitle: event.target.value\r\n    }) */\n\n    /* setUserInput((prevState) => {\r\n      return {...prevState, enteredTitle: event.target.value};\r\n    }); */\n  };\n\n  const amountChangedHander = event => {\n    setEnteredAmount(event.target.value);\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredAmount: event.target.value\r\n    }) */\n  };\n\n  const dateChangedHander = event => {\n    setEnteredDate(event.target.value);\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredDate: event.target.value\r\n    }) */\n  };\n\n  const sumbitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData); // Two way binding to clear input after user submited form\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sumbitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangedHander\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangedHander\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          step: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangedHander\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/oshio/Documents/Udemy React- Complete Guide Course/01- Starter Project/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangedHander","event","target","value","console","log","amountChangedHander","dateChangedHander","sumbitHandler","preventDefault","expenseData","title","amount","date","Date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // Alternative - using one state as opposed to multiple states\r\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: ''\r\n  }); */\r\n\r\n  const titleChangedHander = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    console.log(event.target.value);\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredTitle: event.target.value\r\n    }) */\r\n    /* setUserInput((prevState) => {\r\n      return {...prevState, enteredTitle: event.target.value};\r\n    }); */\r\n  };\r\n\r\n  const amountChangedHander = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredAmount: event.target.value\r\n    }) */\r\n  };\r\n\r\n  const dateChangedHander = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredDate: event.target.value\r\n    }) */\r\n  };\r\n\r\n  const sumbitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n\r\n    console.log(expenseData);\r\n    // Two way binding to clear input after user submited form\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={sumbitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangedHander} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangedHander} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            step='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangedHander} />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button\r\n          type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}